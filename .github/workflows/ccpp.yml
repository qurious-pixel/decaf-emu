name: C/C++ CI

on: [push, pull_request]

jobs:
  windows-build:
    runs-on: windows-2019
    strategy:
      fail-fast: false

    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
      VCPKG_BUILD_TYPE: 'release'
      VCPKG_ROOT: '${{github.workspace}}/libraries/vcpkg'
      OS: windows-2019
      MSVC: msvc2019_64
      COMPILER: cl
      VULKAN_VERSION: 1.3.211.0
      QT_VERSION: 5.15.0

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Initialise
      run: mkdir build

    - name: "Fetch full history for vcpkg submodule"
      run: |
        cd libraries/vcpkg
        git fetch --unshallow
        git pull --all

    - name: 'Setup vcpkg'
      run: |
        ./libraries/vcpkg/bootstrap-vcpkg.bat
        vcpkg x-update-baseline --add-initial-baseline
        
    - name: 'Setup NuGet Credentials'
      shell: 'bash'
      run: >
        cd build &&
        `../libraries/vcpkg/vcpkg fetch nuget | tail -n 1`
        sources add
        -source "https://nuget.pkg.github.com/decaf-emu/index.json"
        -storepasswordincleartext
        -name "GitHub"
        -username "decaf-emu"
        -password "${{ secrets.GITHUB_TOKEN }}"
        -Verbosity "detailed"

    - name: Load Cached Vulkan SDK
      id: cache-vulkan-windows
      uses: actions/cache@v1
      with:
        path: C:/VulkanSDK/${{ env.VULKAN_VERSION }}
        key: ${{ runner.os }}-${{ env.VULKAN_VERSION }}

    - name: Install Vulkan SDK from web
      if: steps.cache-vulkan-windows.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        mkdir "C:\\VulkanSDK"
        cd "C:\\VulkanSDK"
        Invoke-WebRequest "https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_VERSION }}/windows/VulkanSDK-${{ env.VULKAN_VERSION }}-Installer.exe?u=" -OutFile "VulkanSDK.exe"
        Start-Process -FilePath VulkanSDK.exe -Wait -PassThru -ArgumentList @("in --al --da --ao --confirm-command");
        cd "C:\\VulkanSDK\\${{ env.VULKAN_VERSION }}"
        Remove-Item -Force -Recurse Demos
        Remove-Item -Force -Recurse Templates
        Remove-Item -Force -Recurse Tools
        Remove-Item -Force maintenancetool.exe
        Remove-Item -Force Bin\\VkLayer*
        Remove-Item -Force Lib\\shaderc*
        dir

    - name: Load Cached Qt
      id: cache-qt-windows
      uses: actions/cache@v1
      with:
        path: C:/Qt/${{ env.QT_VERSION }}/${{ env.MSVC }}
        key: ${{ runner.os }}-qt-${{ env.QT_VERSION }}-${{ env.MSVC }}

    - name: Install Qt from web
      if: steps.cache-qt-windows.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        mkdir "C:\\Qt"
        cd "C:\\Qt"
        pip install aqtinstall
        cmd /c 'python 2>&1' -m aqt install ${{ env.QT_VERSION }} windows desktop win64_${{ env.MSVC }}
        dir

    - name: Setup Environment
      shell: powershell
      run: |
        echo "VULKAN_SDK=C:\\VulkanSDK\\${{ env.VULKAN_VERSION }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "QTDIR=C:\\Qt\\${{ env.QT_VERSION }}\\${{ env.MSVC }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    #- name: Configure
    #  shell: cmd
    #  run: |
    #    cd build
    #    cmake -DCMAKE_TOOLCHAIN_FILE=../libraries/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows-release -DVCPKG_HOST_TRIPLET=x64-windows-release -DCMAKE_BUILD_TYPE=Release -DDECAF_BUILD_TOOLS=ON -DDECAF_VULKAN=ON -DDECAF_QT=ON -DCMAKE_PREFIX_PATH=%QTDIR% -DCMAKE_INSTALL_PREFIX=install ..

    #- name: Build
    #  run: |
    #    cd build
    #    cmake --build . --config Release -j 2 --target install

    #- uses: actions/upload-artifact@master
    #  with:
    #    name: decaf-emu-${{ env.OS }}
    #    path: build/install

